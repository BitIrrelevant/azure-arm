{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "comments": "This template is released under an as-is, best effort, and is community supported.",
    "author": "Matt McLimans (mmclimans@paloaltonetworks.com), Patrick Glynn (pglynn@paloaltonetworks.com)"
  },
  "parameters": {
    "VNETResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If you are deploying a VNET to a different resource than the firewalls, the resource group MUST exist before launch.  If deploying a VNET to the same resource group as the firewalls, leave the field blank or enter the main resource group name."
      }
    },
    "VNETName": {
      "type": "string",
      "defaultValue": "vmseries-vnet",
      "metadata": {
        "description": "Enter a name for the virtual network."
      }
    },
    "subnetName-Management": {
      "type": "string",
      "defaultValue": "mgmt-subnet",
      "metadata": {
        "description": "Enter a subnet name for the firewall's management interface."
      }
    },
    "subnetName-Dataplane1": {
      "type": "string",
      "defaultValue": "untrust-subnet",
      "metadata": {
        "description": "Enter a subnet name for the firewall's first dataplane interface."
      }
    },
    "subnetName-Dataplane2": {
      "type": "string",
      "defaultValue": "trust-subnet",
      "metadata": {
        "description": "Enter a subnet name for the firewall's second dataplane interface."
      }
    },
    "publicLBResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Enter the public load balancer's resource group if it is different than the deployment resource group.  Otherwise leave it blank."
      }
    },
    "publicLBName": {
      "type": "string",
      "defaultValue": "vmseries-public-lb",
      "metadata": {
        "description": "Enter a name for the public load balancer."
      }
    },
    "publicLBBackendPoolName": {
      "type": "string",
      "defaultValue": "LoadBalancerBackendPool",
      "metadata": {
        "description": "In a comma separated list, enter the ports you want to allow in the public load balancer's rule base.  Every port entered will create an additional rule (i.e. 4 ports = 4 rules)."
      }
    },
    "AddedFWName": {
      "type": "string",
      "defaultValue": "vmseries-fw-vm3",
      "metadata": {
        "description": "Enter a name for the first firewall."
      }
    },
    "licenseType": {
      "type": "string",
      "defaultValue": "byol",
      "allowedValues": [
        "byol"
      ],
      "metadata": {
        "description": "More info: https://docs.paloaltonetworks.com/vm-series/8-1/vm-series-deployment/license-the-vm-series-firewall/license-typesvm-series-firewalls"
      }
    },
    "PANOSVersion": {
      "type": "string",
      "defaultValue": "8.1.0",
      "allowedValues": [
        "8.1.0"
      ],
      "metadata": {
        "description": "Select the PAN-OS version to deploy.  Selecting 'Latest' deploys the latest available image on the Azure Marketplace."
      }
    },
    "VMSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [
        "Standard_D3",
        "Standard_D4",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_A4",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2"
      ],
      "metadata": {
        "description": "Select a VM size for the firewalls."
      }
    },
    "OSDiskType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Select the storage type for the firewall's OS disk. More info: https://docs.microsoft.com/en-us/azure/virtual-machines/windows/managed-disks-overview"
      }
    },
    "applyPublicIPToManagement": {
      "type": "string",
      "defaultValue": "Yes",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Select 'Yes' to add a public IP to the firewall's management interface."
      }
    },
    "applyPublicIPToDataplane1": {
      "type": "string",
      "defaultValue": "Yes",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Select 'Yes' to add a public IP to the firewall's first dataplane interface (i.e. untrust-interface)."
      }
    },
    "NSGSourcePrefix": {
      "type": "string",
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "Enter a valid address prefix. This address will be able to access the firewall's management interface over TCP/443 (GUI), and TCP/22 (Terminal)."
      }
    },
    "username": {
      "type": "string",
      "defaultValue": "paloalto",
      "metadata": {
        "description": "Enter the firewall's administrator username. DO NOT USE ADMIN OR ROOT."
      }
    },
    "password": {
      "type": "securestring",
      "minLength": 12,
      "maxLength": 72,
      "metadata": {
        "description": "Enter the firewall's administrator password. Password must be 12-72 characters and must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character that is not a slash or hypen."
      }
    },
    "(opt.) AppendStringToResources": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If the NAME and CONFIGURATION of the created LBs/NSGs/VMs/VNET match an existing LBs/NSGs/VMs/VNET in the SAME resource group, the template will its skip creation.  If the new resource NAME matches, but the resource CONFIGURATION does not, the template will fail or will overwrite the existing resource."
      }
    }
  },
  "variables": {
    "COMMENT_global": "GLOBAL VARIABLES SHARED AMONG DEPLOYED RESOURCES",
    "global_var_resource_group": "[resourceGroup().name]",
    "global_var_appendedString": "[if(equals(parameters('(opt.) AppendStringToResources'), ''), '', parameters('(opt.) AppendStringToResources'))]",
    "global_var_idleTimeoutInMinutes": 4,
    "global_var_allocationMethod": "Dynamic",
    "global_var_networkVersion": "IPv4",
    "global_resource_apiVersion": "2016-06-01",
    "global_network_apiVersion": "2018-11-01",
    "global_compute_apiVersion": "2017-12-01",
    "global_vnet_name": "[take(replace(parameters('VNETName'), ' ', ''), 64)]",
    "global_vnet_resource_group": "[if(equals(parameters('VNETResourceGroup'), ''), variables('global_var_resource_group'), parameters('VNETResourceGroup'))]",
    "global_vnet_subnet0_name": "[take(replace(parameters('subnetName-Management'), ' ', ''), 80)]",
    "global_vnet_subnet1_name": "[take(replace(parameters('subnetName-Dataplane1'), ' ', ''), 80)]",
    "global_vnet_subnet2_name": "[take(replace(parameters('subnetName-Dataplane2'), ' ', ''), 80)]",
    "global_fw_mgmtnsg_name": "[take(replace(concat(parameters('AddedFWName'), '-mgmt', variables('global_var_appendedString')), ' ', ''), 80)]",
    "global_fw_dataNsg_name": "[take(replace(concat(parameters('AddedFWName'), '-data', variables('global_var_appendedString')), ' ', ''), 80)]",
    "global_fw_interface0_pip_option": "[parameters('applyPublicIPToManagement')]",
    "global_fw_interface1_pip_option": "[parameters('applyPublicIPToDataplane1')]",
    "global_fw_storageAccountType": "[parameters('OSDiskType')]",
    "global_fw_adminUsername": "[parameters('username')]",
    "global_fw_adminPassword": "[parameters('password')]",
    "global_fw_diskSizeGB": 60,
    "global_fw_publisher": "paloaltonetworks",
    "global_fw_license": "[parameters('licenseType')]",
    "global_fw_version": "[parameters('PANOSVersion')]",
    "global_fw_product": "vmseries1",
    "global_fw_vmSize": "[parameters('VMSize')]",

    "COMMENT_nsg": "NSG TEMPLATE VARIABLES",
    "nsg_mgmt_inbound_rule_name": "allow-inbound-https-ssh",
    "nsg_mgmt_inbound_rule_sourceAddress": "[parameters('NSGSourcePrefix')]",
    "nsg_mgmt_inbound_rule_ports": ["22", "443"],
    "nsg_data_inbound_rule_name": "allow-all-inbound",
    "nsg_data_outbound_rule_name": "allow-all-outbound",

    "COMMENT_publicLb": "PUBLIC LB TEMPLATE VARIABLES",
    "publicLb_name": "[take(replace(concat(parameters('publicLBName'), variables('global_var_appendedString')), ' ', ''), 80)]",
    "publicLb_resource_group": "[if(equals(parameters('publicLBResourceGroup'), ''), variables('global_var_resource_group'), parameters('publicLBResourceGroup'))]",
    "publicLb_pool_name": "[parameters('publicLBBackendPoolName')]",

    "COMMENT_fw1": "FW1 TEMPLATE VARIABLES",
    "fw1_computerName": "[take(replace(replace(concat(parameters('AddedFWName'), variables('global_var_appendedString')), ' ', ''), '_', ''), 64)]",
    "fw1_interface0_name": "[take(replace(concat(parameters('AddedFWName'), '-nic0', variables('global_var_appendedString')), ' ', ''), 80)]",
    "fw1_interface1_name": "[take(replace(concat(parameters('AddedFWName'), '-nic1', variables('global_var_appendedString')), ' ', ''), 80)]",
    "fw1_interface2_name": "[take(replace(concat(parameters('AddedFWName'), '-nic2', variables('global_var_appendedString')), ' ', ''), 80)]",
    "fw1_interface0_pip_name": "[take(replace(concat(parameters('AddedFWName'), '-nic0-pip', variables('global_var_appendedString')), ' ', ''), 80)]",
    "fw1_interface1_pip_name": "[take(replace(concat(parameters('AddedFWName'), '-nic1-pip', variables('global_var_appendedString')), ' ', ''), 80)]",
    "fw1_interface0_pip_id": { "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fw1_interface0_pip_name'))]" },
    "fw1_interface1_pip_id": { "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fw1_interface1_pip_name'))]" }
  },
  "resources": [
    {
      "comments": "CREATE FIREWALL MGMT & DATA NSGS",
      "type": "Microsoft.Resources/deployments",
      "name": "CREATE_NSGS",
      "apiVersion": "[variables('global_resource_apiVersion')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "name": "[variables('global_fw_mgmtnsg_name')]",
              "apiVersion": "[variables('global_network_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "securityRules": [
                  {
                    "name": "[variables('nsg_mgmt_inbound_rule_name')]",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "[variables('nsg_mgmt_inbound_rule_sourceAddress')]",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": "100",
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": "[variables('nsg_mgmt_inbound_rule_ports')]",
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "name": "[variables('global_fw_dataNsg_name')]",
              "apiVersion": "[variables('global_network_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "securityRules": [
                  {
                    "name": "[variables('nsg_data_inbound_rule_name')]",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": "100",
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "[variables('nsg_data_outbound_rule_name')]",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": "100",
                      "direction": "Outbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "comments": "CREATE FW1 WITH INTERFACES",
      "type": "Microsoft.Resources/deployments",
      "name": "CREATE_FW1",
      "apiVersion": "[variables('global_resource_apiVersion')]",
      "dependsOn": [
        "CREATE_NSGS"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "condition": "[equals(variables('global_fw_interface0_pip_option'), 'Yes')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "name": "[variables('fw1_interface0_pip_name')]",
              "apiVersion": "[variables('global_network_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "publicIPAddressVersion": "[variables('global_var_networkVersion')]",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": "[variables('global_var_idleTimeoutInMinutes')]"
              }
            },
            {
              "condition": "[equals(variables('global_fw_interface1_pip_option'), 'Yes')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "name": "[variables('fw1_interface1_pip_name')]",
              "apiVersion": "[variables('global_network_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "publicIPAddressVersion": "[variables('global_var_networkVersion')]",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": "[variables('global_var_idleTimeoutInMinutes')]"
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('fw1_interface0_name')]",
              "apiVersion": "[variables('global_network_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "[variables('global_var_allocationMethod')]",
                      "publicIpAddress": "[if(equals(variables('global_fw_interface0_pip_option'), 'Yes'), variables('fw1_interface0_pip_id'), json('null'))]",
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet0_name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "[variables('global_var_networkVersion')]"
                    }
                  }
                ],
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('global_fw_mgmtnsg_name'))]"
                },
                "tapConfigurations": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('fw1_interface0_pip_name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('fw1_interface1_name')]",
              "apiVersion": "[variables('global_network_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "[variables('global_var_allocationMethod')]",
                      "publicIpAddress": "[if(equals(variables('global_fw_interface1_pip_option'), 'Yes'), variables('fw1_interface1_pip_id'), json('null'))]",
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet1_name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "[variables('global_var_networkVersion')]",
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[concat(resourceId(variables('publicLb_resource_group'), 'Microsoft.Network/loadBalancers', variables('publicLb_name')), '/backendAddressPools/', variables('publicLb_pool_name'))]"
                        }
                      ]
                    }
                  }
                ],
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('global_fw_dataNsg_name'))]"
                },
                "tapConfigurations": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('fw1_interface1_pip_name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('fw1_interface2_name')]",
              "apiVersion": "[variables('global_network_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "[variables('global_var_allocationMethod')]",
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet2_name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "[variables('global_var_networkVersion')]"
                    }
                  }
                ],
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('global_fw_dataNsg_name'))]"
                },
                "tapConfigurations": []
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "name": "[variables('fw1_computerName')]",
              "apiVersion": "[variables('global_compute_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[variables('global_fw_vmSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "[variables('global_fw_publisher')]",
                    "offer": "[variables('global_fw_product')]",
                    "sku": "[variables('global_fw_license')]",
                    "version": "[variables('global_fw_version')]"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "[variables('global_fw_storageAccountType')]"
                    },
                    "diskSizeGB": "[variables('global_fw_diskSizeGB')]"
                  }
                },
                "osProfile": {
                  "computerName": "[variables('fw1_computerName')]",
                  "adminUsername": "[variables('global_fw_adminUsername')]",
                  "adminPassword": "[variables('global_fw_adminPassword')]"
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fw1_interface0_name'))]",
                      "properties": {
                        "primary": true
                      }
                    },
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fw1_interface1_name'))]",
                      "properties": {
                        "primary": false
                      }
                    },
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fw1_interface2_name'))]",
                      "properties": {
                        "primary": false
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fw1_interface0_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fw1_interface1_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fw1_interface2_name'))]"
              ]
            }
          ]
        }
      }
    }
  ]
}