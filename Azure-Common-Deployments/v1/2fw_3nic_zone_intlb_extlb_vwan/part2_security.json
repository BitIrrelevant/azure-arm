{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "comments": "This template is released under an as-is, best effort, and is community supported.",
    "author": "Matt McLimans (mmclimans@paloaltonetworks.com)"
  },
  "parameters": {
    "VNETOption": {
      "type": "string",
      "defaultValue": "Create new VNET",
      "allowedValues": [
        "Create new VNET",
        "Use existing VNET"
      ],
      "metadata": {
        "description": "If creating a new VNET, anything not specified in the template will be deleted."
      }
    },
    "VNETResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If you are deploying a VNET to a different resource than the firewalls, the resource group MUST exist before launch.  If deploying a VNET to the same resource group as the firewalls, leave the field blank or enter the main resource group name."
      }
    },
    "VNETName": {
      "type": "string",
      "defaultValue": "security-vnet",
      "metadata": {
        "description": "Enter a name for the virtual network."
      }
    },
    "VNETPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Enter a prefix for the virtual network."
      }
    },
    "subnetName-Management": {
      "type": "string",
      "defaultValue": "mgmt-subnet",
      "metadata": {
        "description": "Enter a subnet name for the firewall's management interface."
      }
    },
    "subnetName-Dataplane1": {
      "type": "string",
      "defaultValue": "untrust-subnet",
      "metadata": {
        "description": "Enter a subnet name for the firewall's first dataplane interface."
      }
    },
    "subnetName-Dataplane2": {
      "type": "string",
      "defaultValue": "trust-subnet",
      "metadata": {
        "description": "Enter a subnet name for the firewall's second dataplane interface."
      }
    },
    "subnetPrefix-Management": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Enter a subnet prefix for the firewall's management interface."
      }
    },
    "subnetPrefix-Dataplane1": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Enter a subnet prefix for the firewall's first dataplane interface."
      }
    },
    "subnetPrefix-Dataplane2": {
      "type": "string",
      "defaultValue": "10.0.2.0/24",
      "metadata": {
        "description": "Enter a subnet prefix for the firewall's second dataplane interface."
      }
    },
    "subnetPrefix-GatewaySubnet": {
      "type": "string",
      "defaultValue": "10.0.3.0/24",
      "metadata": {
        "description": "Enter a subnet prefix for the internal load balancer."
      }
    },
    "internalLBAddress": {
      "type": "string",
      "defaultValue": "10.0.2.100",
      "metadata": {
        "description": "Enter the frontend private IP of the internal load balancer.  The address must be within the load balancer subnet prefix."
      }
    },
    "namingPrefix": {
      "type": "string",
      "defaultValue": "vmseries-",
      "metadata": {
        "description": "If the NAME and CONFIGURATION of the created LBs/NSGs/VMs/VNET match an existing LBs/NSGs/VMs/VNET in the SAME resource group, the template will its skip creation.  If the new resource NAME matches, but the resource CONFIGURATION does not, the template will fail or will overwrite the existing resource."
      }
    },
    "licenseType": {
      "type": "string",
      "allowedValues": [
        "byol",
        "bundle1",
        "bundle2"
      ],
      "metadata": {
        "description": "More info: https://docs.paloaltonetworks.com/vm-series/8-1/vm-series-deployment/license-the-vm-series-firewall/license-typesvm-series-firewalls"
      }
    },
    "PANOSVersion": {
      "type": "string",
      "defaultValue": "latest",
      "allowedValues": [
        "latest",
        "9.0.6",
        "9.0.4",
        "8.1.0",
        "8.0.0",
        "7.1.1"
      ],
      "metadata": {
        "description": "Select the PAN-OS version to deploy.  Selecting 'Latest' deploys the latest available image on the Azure Marketplace."
      }
    },
    "VMSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [
        "Standard_D3",
        "Standard_D4",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_A4",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2"
      ],
      "metadata": {
        "description": "Select a VM size for the firewalls."
      }
    },
    "acceleratedNetworking": {
      "type": "string",
      "defaultValue": "disable",
      "allowedValues": [
        "enable (Only supported on PAN-OS 9.0 or greater)",
        "disable"
      ],
      "metadata": {
        "description": "Enable accelerated networking on the firewall's interfaces.  Only enable if you are deploying PAN-OS 9.0 or greater."
      }
    },
    "applyPublicIPToManagement": {
      "type": "string",
      "defaultValue": "Yes",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Select 'Yes' to add a public IP to the firewall's management interface."
      }
    },
    "NSGSourcePrefix": {
      "type": "string",
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "Enter a valid address prefix. This address will be able to access the firewall's management interface over TCP/443 (GUI), and TCP/22 (Terminal)."
      }
    },
    "username": {
      "type": "string",
      "defaultValue": "paloalto",
      "metadata": {
        "description": "Enter the firewall's administrator username. DO NOT USE ADMIN OR ROOT."
      }
    },
    "password": {
      "type": "securestring",
      "minLength": 12,
      "maxLength": 72,
      "metadata": {
        "description": "Enter the firewall's administrator password. Password must be 12-72 characters and must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character that is not slash or hyphen."
      }
    },
    "(opt.) BootstrapStorageAccount": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "(Optional) To bootstrap the firewalls, enter the Azure storage account name that contains the bootstrap file share."
      }
    },
    "(opt.) BootstrapAccessKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "(Optional) To bootstrap the firewalls, enter the Azure storage account access key."
      }
    },
    "(opt.) BootstrapFileShareName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "(Optional) To bootstrap the firewalls, enter the name of the Azure storage account file share that contains the bootstrap configuration."
      }
    },
    "virtualNetworkGatewayASN": {
      "type": "int",
      "defaultValue": 64456,
      "metadata": {
        "description": "Enter the ASN for the Virtual Network Gateway in the security-VNET."
      }
    },
    "virtualNetworkGatewayBGPAddresses": {
      "type": "string",
      "defaultValue": "10.0.3.4,10.0.3.5",
      "metadata": {
        "description": "2 Maxmium.  Enter the VNG BGP IP addresses.  These addresses must be in the GatewaySubnet CIDR range."
      }
    },
    "virtualNetworkGatewayKey": {
      "type": "string",
      "defaultValue": "panwdemokey0123456789",
      "metadata": {
        "description": "Enter the preshared key for the Hub's VPN gateway."
      }
    },
    "existing-WANName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Virtual Wan."
      }
    },
    "existing-WANResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The bgp peer IP address of a vpnsite."
      }
    },
    "existing-HubName": {
      "type": "string",
      "defaultValue": "hub1",
      "metadata": {
        "description": "Name of the Virtual Hub. A virtual hub is created inside a virtual wan."
      }
    },
    "existing-HubVPNGatewayName": {
      "type": "string",
      "defaultValue": "hub1-vpn-gateway",
      "metadata": {
        "description": "Name of the Vpn Gateway. A vpn gateway is created inside a virtual hub."
      }
    }
  },
  "variables": {
    "global_var_resource_group": "[resourceGroup().name]",
    "global_var_appendedString": "[parameters('namingPrefix')]",
    "global_var_idleTimeoutInMinutes": 4,
    "global_var_allocationMethod": "Static",
    "global_var_networkVersion": "IPv4",
    "global_var_apiVersion": "2020-03-01",
    "global_var_tier": "Regional",
    "global_var_sku": "Standard",
    "global_var_delimiters": [",", ";"],
    "global_vnet_name": "[parameters('VNETName')]",
    "global_vnet_resource_group": "[if(equals(parameters('VNETResourceGroup'), ''), variables('global_var_resource_group'), parameters('VNETResourceGroup'))]",
    "global_vnet_option": "[parameters('VNETOption')]",
    "global_vnet_subnet0_name": "[parameters('subnetName-Management')]",
    "global_vnet_subnet1_name": "[parameters('subnetName-Dataplane1')]",
    "global_vnet_subnet2_name": "[parameters('subnetName-Dataplane2')]",
    "global_vnet_subnet3_name": "GatewaySubnet",
    "global_fw_mgmtnsg_name": "[concat(variables('global_var_appendedString'), 'nsg-mgmt')]",
    "global_fw_dataNsg_name": "[concat(variables('global_var_appendedString'), 'nsg-data')]",
    "global_fw_interface0_pip_option": "[parameters('applyPublicIPToManagement')]",
    "global_fw_interface1_pip_option": "Yes",
    "global_fw_storageAccountType": "Standard_LRS",
    "global_fw_adminUsername": "[parameters('username')]",
    "global_fw_adminPassword": "[parameters('password')]",
    "global_fw_diskSizeGB": 60,
    "global_fw_bootstrap_share_directory": "",
    "global_fw_bootstrap": "[concat('storage-account=', parameters('(opt.) BootstrapStorageAccount'), ',access-key=', parameters('(opt.) BootstrapAccessKey'), ',file-share=', parameters('(opt.) BootstrapFileShareName'), ',share-directory=', variables('global_fw_bootstrap_share_directory'))]",
    "global_fw_publisher": "paloaltonetworks",
    "global_fw_license": "[parameters('licenseType')]",
    "global_fw_version": "[parameters('PANOSVersion')]",
    "global_fw_product": "vmseries1",
    "global_fw_vmSize": "[parameters('VMSize')]",
    "global_fw_enableAcceleratedNetworking": "[if(equals(parameters('acceleratedNetworking'), 'enable (Only supported on PAN-OS 9.0 or greater)'), 'true', 'false')]",
    
    "nsg_mgmt_inbound_rule_name": "allow-inbound-https-ssh",
    "nsg_mgmt_inbound_rule_sourceAddress": "[parameters('NSGSourcePrefix')]",
    "nsg_mgmt_inbound_rule_ports": ["22","443"],
    "nsg_data_inbound_rule_name": "allow-all-inbound",
    "nsg_data_outbound_rule_name": "allow-all-outbound",

    "vnet_cidr": "[parameters('VNETPrefix')]",
    "vnet_subnet0_cidr": "[parameters('subnetPrefix-Management')]",
    "vnet_subnet1_cidr": "[parameters('subnetPrefix-Dataplane1')]",
    "vnet_subnet2_cidr": "[parameters('subnetPrefix-Dataplane2')]",
    "vnet_subnet3_cidr": "[parameters('subnetPrefix-GatewaySubnet')]",
    "vnet_subnet3_rtb_name": "GatewaySubnet-RTB",
    "vnet_subnet3_rtb_route0_name": "default1-udr",
    "vnet_subnet3_rtb_route0_destination": "0.0.0.0/1",
    "vnet_subnet3_rtb_route1_name": "default2-udr",
    "vnet_subnet3_rtb_route1_destination": "128.0.0.0/1",

    "publicLb_name": "[concat(variables('global_var_appendedString'),'public-lb')]",
    "publicLb_resource_group": "[resourceGroup().name]",
    "publicLb_frontend_name": "LoadBalancerFrontEnd",
    "publicLb_pool_name": "LoadBalancerBackendPool",
    "publicLb_rule_name": "rule-",
    "public_lb_ports": "80,22",
    "publicLb_rule_port": "[split(variables('public_lb_ports'),variables('global_var_delimiters'))]",
    "publicLb_rule_protocol": "Tcp",
    "publicLb_rule_enableTcpReset": "false",
    "publicLb_rule_loadDistribution": "Default",
    "publicLb_rule_enableFloatingIP": true,
    "publicLb_rule_disableOutboundSnat": "false",
    "publicLb_probe_name": "HealthProbe",
    "publicLb_probe_port": "22",
    "publicLb_probe_protocol": "Tcp",
    "publicLb_probe_intervalInSeconds": 5,
    "publicLb_probe_numberOfProbes": 2,
    "publicLb_pip_name": "[concat(variables('publicLb_name'), '-pip')]",

    "internalLb_name": "[concat(variables('global_var_appendedString'), 'internal-lb')]",
    "internalLb_resource_group": "[resourceGroup().name]",
    "internalLb_frontend_name": "LoadBalancerFrontEnd",
    "internalLb_frontend_ip": "[parameters('internalLBAddress')]",
    "internalLb_pool_name": "LoadBalancerBackendPool",
    "internalLb_rule_name": "ha-ports",
    "internalLb_rule_port": 0,
    "internalLb_rule_protocol": "All",
    "internalLb_rule_enableTcpReset": "false",
    "internalLb_rule_loadDistribution": "Default",
    "internalLb_rule_enableFloatingIP": true,
    "internalLb_rule_disableOutboundSnat": "false",
    "internalLb_probe_name": "HealthProbe",
    "internalLb_probe_port": "22",
    "internalLb_probe_protocol": "Tcp",
    "internalLb_probe_intervalInSeconds": 5,
    "internalLb_probe_numberOfProbes": 2,

    "fw1_computerName": "[concat(variables('global_var_appendedString'), 'fw-vm1')]",
    "fw1_interface0_name": "[concat(variables('fw1_computerName'), '-nic0')]",
    "fw1_interface1_name": "[concat(variables('fw1_computerName'), '-nic1')]",
    "fw1_interface2_name": "[concat(variables('fw1_computerName'), '-nic2')]",
    "fw1_interface0_pip_name": "[concat(variables('fw1_computerName'), '-nic0-pip')]",
    "fw1_interface1_pip_name": "[concat(variables('fw1_computerName'), '-nic1-pip')]",
    "fw1_interface0_pip_id": {"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fw1_interface0_pip_name'))]"},
    "fw1_interface1_pip_id": {"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fw1_interface1_pip_name'))]"},
    "fw1_zone": "1",
    
    "fw2_computerName": "[concat(variables('global_var_appendedString'), 'fw-vm2')]",
    "fw2_interface0_name": "[concat(variables('fw2_computerName'), '-nic0')]",
    "fw2_interface1_name": "[concat(variables('fw2_computerName'), '-nic1')]",
    "fw2_interface2_name": "[concat(variables('fw2_computerName'), '-nic2')]",
    "fw2_interface0_pip_name": "[concat(variables('fw2_computerName'), '-nic0-pip')]",
    "fw2_interface1_pip_name": "[concat(variables('fw2_computerName'), '-nic1-pip')]",
    "fw2_interface0_pip_id": {"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fw2_interface0_pip_name'))]"},
    "fw2_interface1_pip_id": {"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fw2_interface1_pip_name'))]"},
    "fw2_zone": "2",
    
    "vng_name": "[concat(variables('global_vnet_name'), '-vng')]",
    "vng_pip1_name": "[concat(variables('vng_name'), '-pip1')]",
    "vng_pip2_name": "[concat(variables('vng_name'), '-pip2')]",
    "vng_pip_sku": "Basic",
    "vng_allocationMethod": "Dynamic",
    "vng_shared_key": "[parameters('virtualNetworkGatewayKey')]",
    "vng_enable_bgp": true,
    "vng_asn": "[parameters('virtualNetworkGatewayASN')]",
    "vng_bgp_ips": "[parameters('virtualNetworkGatewayBGPAddresses')]",
    "vng_bgp_split": "[split(parameters('virtualNetworkGatewayBGPAddresses'),variables('global_var_delimiters'))]",
    "vng_bgp_ip1": "[first(variables('vng_bgp_split'))]",
    "vng_bgp_ip2": "[last(variables('vng_bgp_split'))]",

    "vng_generation": "Generation1",
    "vng_tier": "VpnGw1",
    "vng_type": "RouteBased",
    "vng_active_active": true,
    "vng_connection_name": "[concat(variables('vng_name'), '-connection1')]",
    "vng_lng_name": "[concat(variables('vng_name'), '-lng1')]",
    "vng_lng_gateway_ip": "20.185.10.24",
    "vng_lng_bgp_ip": "10.10.0.13",
    "vng_lng_asn": 65510,

    "wan_location": "[resourceGroup().location]",
    "wan_rg": "[parameters('existing-WANResourceGroup')]",
    "wan_id": "[concat(resourceId(variables('wan_rg'), 'Microsoft.Network/virtualWans', parameters('existing-WANName')))]",
    "wan_hub_id": "[concat(resourceId(variables('wan_rg'), 'Microsoft.Network/virtualHubs', parameters('existing-HubName')))]",
    "wan_hub_vpn_gateway_name": "[parameters('existing-HubVPNGatewayName')]",
    "wan_hub_vpn_connection_name": "[concat(variables('global_var_appendedString'), 'connection')]",
    "wan_hub_vpn_site_name": "[concat(variables('global_var_appendedString'), 'site')]",
    "wan_hub_vpn_site_id": "[concat(resourceId(variables('wan_rg'), 'Microsoft.Network/vpnSites', variables('wan_hub_vpn_site_name')))]",
    "wan_hub_vpn_address_space_list": ["0.0.0.0/0"],
    "wan_hub_vpn_bgp_enable": true,
    "wan_hub_vpn_connection_vendor": "Palo Alto Networks",
    "wan_hub_vpn_connection_speed": 1,
    "wan_hub_vpn_bandwidth": 2,

    "_artifactsLocation": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-application-gateway-webapp-iprestriction/",
    "_artifactsLocationSasToken": ""
  },
  "resources": [
    {
      "comments": "CREATE FIREWALL MGMT & DATA NSGS",
      "type": "Microsoft.Resources/deployments",
      "name": "CREATE_NSGS",
      "apiVersion": "2020-01-01",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "name": "[variables('global_fw_mgmtnsg_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "securityRules": [
                  {
                    "name": "[variables('nsg_mgmt_inbound_rule_name')]",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "[variables('nsg_mgmt_inbound_rule_sourceAddress')]",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": "100",
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": "[variables('nsg_mgmt_inbound_rule_ports')]",
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "name": "[variables('global_fw_dataNsg_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "securityRules": [
                  {
                    "name": "[variables('nsg_data_inbound_rule_name')]",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": "100",
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "[variables('nsg_data_outbound_rule_name')]",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": "100",
                      "direction": "Outbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "comments": "CREATE VIRTUAL NETWORK WITH 4 SUBNETS",
      "type": "Microsoft.Resources/deployments",
      "name": "CREATE_VNET",
      "apiVersion": "2020-01-01",
      "resourceGroup": "[variables('global_vnet_resource_group')]",
      "condition": "[equals(variables('global_vnet_option'), 'Create new VNET')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "name": "[variables('global_vnet_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('vnet_cidr')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('global_vnet_subnet0_name')]",
                    "properties": {
                      "addressPrefix": "[variables('vnet_subnet0_cidr')]"
                    }
                  },
                  {
                    "name": "[variables('global_vnet_subnet1_name')]",
                    "properties": {
                      "addressPrefix": "[variables('vnet_subnet1_cidr')]"
                    }
                  },
                  {
                    "name": "[variables('global_vnet_subnet2_name')]",
                    "properties": {
                      "addressPrefix": "[variables('vnet_subnet2_cidr')]"
                    }
                  },
                  {
                    "name": "[variables('global_vnet_subnet3_name')]",
                    "properties": {
                      "addressPrefix": "[variables('vnet_subnet3_cidr')]"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/routeTables",
              "name": "[variables('vnet_subnet3_rtb_name')]",
              "apiVersion": "[variables('global_var_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "routes": [
                  {
                    "name": "[variables('vnet_subnet3_rtb_route0_name')]",
                    "properties": {
                      "addressPrefix": "[variables('vnet_subnet3_rtb_route0_destination')]",
                      "nextHopType": "VirtualAppliance",
                      "nextHopIpAddress": "[variables('internalLb_frontend_ip')]"
                    }
                  },
                  {
                    "name": "[variables('vnet_subnet3_rtb_route1_name')]",
                    "properties": {
                      "addressPrefix": "[variables('vnet_subnet3_rtb_route1_destination')]",
                      "nextHopType": "VirtualAppliance",
                      "nextHopIpAddress": "[variables('internalLb_frontend_ip')]"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "comments": "CREATE VIRTUAL NETWORK GATEWAY",
      "type": "Microsoft.Resources/deployments",
      "name": "CREATE_VNG",
      "apiVersion": "2020-01-01",
      "resourceGroup": "[resourceGroup().name]",
      "dependsOn": [
        "CREATE_VNET"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-03-01",
              "name": "[variables('vng_pip1_name')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "[variables('vng_pip_sku')]"
              },
              "properties": {
                "publicIPAddressVersion": "[variables('global_var_networkVersion')]",
                "publicIPAllocationMethod": "[variables('vng_allocationMethod')]",
                "idleTimeoutInMinutes": "[variables('global_var_idleTimeoutInMinutes')]",
                "ipTags": []
              }
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-03-01",
              "name": "[variables('vng_pip2_name')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "[variables('vng_pip_sku')]"
              },
              "properties": {
                "publicIPAddressVersion": "[variables('global_var_networkVersion')]",
                "publicIPAllocationMethod": "[variables('vng_allocationMethod')]",
                "idleTimeoutInMinutes": "[variables('global_var_idleTimeoutInMinutes')]",
                "ipTags": []
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworkGateways",
              "apiVersion": "2020-03-01",
              "name": "[variables('vng_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "enablePrivateIpAddress": false,
                "ipConfigurations": [
                  {
                    "name": "[concat(variables('vng_name'), '-ipconfig1')]",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vng_pip1_name'))]"
                      },
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet3_name'))]"
                      }
                    }
                  },
                  {
                    "name": "[concat(variables('vng_name'), '-ipconfig2')]",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vng_pip2_name'))]"
                      },
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet3_name'))]"
                      }
                    }
                  }
                ],
                "sku": {
                  "name": "[variables('vng_tier')]",
                  "tier": "[variables('vng_tier')]"
                },
                "gatewayType": "Vpn",
                "vpnType":"[variables('vng_type')]",
                "enableBgp": "[variables('vng_enable_bgp')]",
                "activeActive": "[variables('vng_active_active')]",
                "bgpSettings": {
                  "asn": "[variables('vng_asn')]",
                  "bgpPeeringAddress": "[variables('vng_bgp_ips')]",
                  "peerWeight": 1,
                  "bgpPeeringAddresses": [
                    {
                      "ipconfigurationId": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', variables('vng_name')), concat('/ipConfigurations/', variables('vng_name'), '-ipconfig1'))]",
                      "customBgpIpAddresses": []
                    },
                    {
                      "ipconfigurationId": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', variables('vng_name')), concat('/ipConfigurations/', variables('vng_name'), '-ipconfig2'))]",
                      "customBgpIpAddresses": []
                    }
                  ]
                },
                "vpnGatewayGeneration": "[variables('vng_generation')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vng_pip1_name'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vng_pip2_name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/localNetworkGateways",
              "apiVersion": "2020-03-01",
              "name": "[variables('vng_lng_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "localNetworkAddressSpace": {
                  "addressPrefixes": []
                },
                "gatewayIpAddress": "[variables('vng_lng_gateway_ip')]",
                "bgpSettings": {
                  "asn": "[variables('vng_lng_asn')]",
                  "bgpPeeringAddress": "[variables('vng_lng_bgp_ip')]",
                  "peerWeight": 0
                }
              }
            },
            {
              "type": "Microsoft.Network/connections",
              "apiVersion": "2020-03-01",
              "name": "[variables('vng_connection_name')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "virtualNetworkGateway1": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vng_name'))]"
                },
                "localNetworkGateway2": {
                  "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('vng_lng_name'))]"
                },
                "connectionType": "IPsec",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "sharedKey": "[variables('vng_shared_key')]",
                "enableBgp": true,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "trafficSelectorPolicies": [],
                "expressRouteGatewayBypass": false,
                "dpdTimeoutSeconds": 0
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vng_name'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('vng_lng_name'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "comments": "CREATE FIREWALL PUBLIC LOAD BALANCER",
      "type": "Microsoft.Resources/deployments",
      "name": "CREATE_PUBLICLB",
      "apiVersion": "2020-01-01",
      "resourceGroup": "[variables('publicLb_resource_group')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "sku": {
                "name": "[variables('global_var_sku')]",
                "tier": "[variables('global_var_tier')]"
              },
              "name": "[variables('publicLb_pip_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "publicIPAddressVersion": "[variables('global_var_networkVersion')]",
                "publicIPAllocationMethod": "[variables('global_var_allocationMethod')]",
                "idleTimeoutInMinutes": "[variables('global_var_idleTimeoutInMinutes')]"
              }
            },
            {
              "type": "Microsoft.Network/loadBalancers",
              "sku": {
                "name": "[variables('global_var_sku')]"
              },
              "name": "[variables('publicLb_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "frontendIPConfigurations": [
                  {
                    "name": "[variables('publicLb_frontend_name')]",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId(variables('publicLb_resource_group'), 'Microsoft.Network/publicIPAddresses', variables('publicLb_pip_name'))]"
                      }
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "[variables('publicLb_pool_name')]"
                  }
                ],
                "copy": [
                  {
                    "name": "loadBalancingRules",
                    "count": "[length(variables('publicLb_rule_port'))]",
                    "input": {
                      "name": "[concat(variables('publicLb_rule_name'), copyIndex('loadBalancingRules'))]",
                      "properties": {
                        "frontendIPConfiguration": {
                          "id": "[concat(resourceId(variables('publicLb_resource_group'), 'Microsoft.Network/loadBalancers', variables('publicLb_name')), '/frontendIPConfigurations/', variables('publicLb_frontend_name'))]"
                        },
                        "frontendPort": "[variables('publicLb_rule_port')[copyIndex('loadBalancingRules')]]",
                        "backendPort": "[variables('publicLb_rule_port')[copyIndex('loadBalancingRules')]]",
                        "enableFloatingIP": "[variables('publicLb_rule_enableFloatingIP')]",
                        "idleTimeoutInMinutes": "[variables('global_var_idleTimeoutInMinutes')]",
                        "protocol": "[variables('publicLb_rule_protocol')]",
                        "enableTcpReset": "[variables('publicLb_rule_enableTcpReset')]",
                        "loadDistribution": "[variables('publicLb_rule_loadDistribution')]",
                        "disableOutboundSnat": "[variables('publicLb_rule_disableOutboundSnat')]",
                        "backendAddressPool": {
                          "id": "[concat(resourceId(variables('publicLb_resource_group'), 'Microsoft.Network/loadBalancers', variables('publicLb_name')), '/backendAddressPools/', variables('publicLb_pool_name'))]"
                        },
                        "probe": {
                          "id": "[concat(resourceId(variables('publicLb_resource_group'), 'Microsoft.Network/loadBalancers', variables('publicLb_name')), '/probes/', variables('publicLb_probe_name'))]"
                        }
                      }
                    }
                  }
                ],
                "probes": [
                  {
                    "name": "[variables('publicLb_probe_name')]",
                    "properties": {
                      "protocol": "[variables('publicLb_probe_protocol')]",
                      "port": "[variables('publicLb_probe_port')]",
                      "intervalInSeconds": "[variables('publicLb_probe_intervalInSeconds')]",
                      "numberOfProbes": "[variables('publicLb_probe_numberOfProbes')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId(variables('publicLb_resource_group'), 'Microsoft.Network/publicIPAddresses', variables('publicLb_pip_name'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "comments": "CREATE FIREWALL INTERNAL LOAD BALANCER WITH HA PORTS",
      "type": "Microsoft.Resources/deployments",
      "name": "CREATE_INTERNALLB",
      "apiVersion": "2020-01-01",
      "resourceGroup": "[variables('internalLb_resource_group')]",
      "dependsOn": [
        "CREATE_VNET"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Network/loadBalancers",
              "sku": {
                "name": "[variables('global_var_sku')]",
                "tier": "[variables('global_var_tier')]"
              },
              "name": "[variables('internalLb_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "frontendIPConfigurations": [
                  {
                    "name": "[variables('internalLb_frontend_name')]",
                    "properties": {
                      "privateIPAddress": "[variables('internalLb_frontend_ip')]",
                      "privateIPAllocationMethod": "[variables('global_var_allocationMethod')]",
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet2_name'))]"
                      }
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "[variables('internalLb_pool_name')]"
                  }
                ],
                "loadBalancingRules": [
                  {
                    "name": "[variables('internalLb_rule_name')]",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[concat(resourceId(variables('internalLb_resource_group'), 'Microsoft.Network/loadBalancers', variables('internalLb_name')), '/frontendIPConfigurations/', variables('internalLb_frontend_name'))]"
                      },
                      "frontendPort": "[variables('internalLb_rule_port')]",
                      "backendPort": "[variables('internalLb_rule_port')]",
                      "enableFloatingIP": "[variables('internalLb_rule_enableFloatingIP')]",
                      "idleTimeoutInMinutes": "[variables('global_var_idleTimeoutInMinutes')]",
                      "protocol": "[variables('internalLb_rule_protocol')]",
                      "enableTcpReset": "[variables('internalLb_rule_enableTcpReset')]",
                      "loadDistribution": "[variables('internalLb_rule_loadDistribution')]",
                      "disableOutboundSnat": "[variables('internalLb_rule_disableOutboundSnat')]",
                      "backendAddressPool": {
                        "id": "[concat(resourceId(variables('internalLb_resource_group'), 'Microsoft.Network/loadBalancers', variables('internalLb_name')), '/backendAddressPools/', variables('internalLb_pool_name'))]"
                      },
                      "probe": {
                        "id": "[concat(resourceId(variables('internalLb_resource_group'), 'Microsoft.Network/loadBalancers', variables('internalLb_name')), '/probes/', variables('internalLb_probe_name'))]"
                      }
                    }
                  }
                ],
                "probes": [
                  {
                    "name": "[variables('internalLb_probe_name')]",
                    "properties": {
                      "protocol": "[variables('internalLb_probe_protocol')]",
                      "port": "[variables('internalLb_probe_port')]",
                      "intervalInSeconds": "[variables('internalLb_probe_intervalInSeconds')]",
                      "numberOfProbes": "[variables('internalLb_probe_numberOfProbes')]"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "comments": "CREATE FW1 WITH INTERFACES",
      "type": "Microsoft.Resources/deployments",
      "name": "CREATE_FW1",
      "apiVersion": "2020-01-01",
      "resourceGroup": "[resourceGroup().name]",
      "dependsOn": [
        "CREATE_VNET",
        "CREATE_NSGS",
        "CREATE_INTERNALLB",
        "CREATE_PUBLICLB"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "condition": "[equals(variables('global_fw_interface0_pip_option'), 'Yes')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "sku": {
                "name": "[variables('global_var_sku')]",
                "tier": "[variables('global_var_tier')]"
              },
              "name": "[variables('fw1_interface0_pip_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "publicIPAddressVersion": "[variables('global_var_networkVersion')]",
                "publicIPAllocationMethod": "[variables('global_var_allocationMethod')]",
                "idleTimeoutInMinutes": "[variables('global_var_idleTimeoutInMinutes')]"
              }
            },
            {
              "condition": "[equals(variables('global_fw_interface1_pip_option'), 'Yes')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "sku": {
                "name": "[variables('global_var_sku')]",
                "tier": "[variables('global_var_tier')]"
              },
              "name": "[variables('fw1_interface1_pip_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "publicIPAddressVersion": "[variables('global_var_networkVersion')]",
                "publicIPAllocationMethod": "[variables('global_var_allocationMethod')]",
                "idleTimeoutInMinutes": "[variables('global_var_idleTimeoutInMinutes')]"
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('fw1_interface0_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIpAddress": "[if(equals(variables('global_fw_interface0_pip_option'), 'Yes'), variables('fw1_interface0_pip_id'), json('null'))]",
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet0_name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "[variables('global_var_networkVersion')]"
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[variables('global_fw_enableAcceleratedNetworking')]",
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('global_fw_mgmtnsg_name'))]"
                },
                "tapConfigurations": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('fw1_interface0_pip_name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('fw1_interface1_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIpAddress": "[if(equals(variables('global_fw_interface1_pip_option'), 'Yes'), variables('fw1_interface1_pip_id'), json('null'))]",
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet1_name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "[variables('global_var_networkVersion')]",
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[concat(resourceId(variables('publicLb_resource_group'), 'Microsoft.Network/loadBalancers', variables('publicLb_name')), '/backendAddressPools/', variables('publicLb_pool_name'))]"
                        }
                      ]
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[variables('global_fw_enableAcceleratedNetworking')]",
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('global_fw_dataNsg_name'))]"
                },
                "tapConfigurations": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('fw1_interface1_pip_name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('fw1_interface2_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet2_name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "[variables('global_var_networkVersion')]",
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[concat(resourceId(variables('internalLb_resource_group'), 'Microsoft.Network/loadBalancers', variables('internalLb_name')), '/backendAddressPools/', variables('internalLb_pool_name'))]"
                        }
                      ]
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[variables('global_fw_enableAcceleratedNetworking')]",
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('global_fw_dataNsg_name'))]"
                },
                "tapConfigurations": []
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "name": "[variables('fw1_computerName')]",
              "apiVersion": "2019-12-01",
              "location": "[resourceGroup().location]",
              "plan": {
                "name": "[variables('global_fw_license')]",
                "product": "[variables('global_fw_product')]",
                "publisher": "[variables('global_fw_publisher')]"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[variables('global_fw_vmSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "[variables('global_fw_publisher')]",
                    "offer": "[variables('global_fw_product')]",
                    "sku": "[variables('global_fw_license')]",
                    "version": "[variables('global_fw_version')]"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "[variables('global_fw_storageAccountType')]"
                    },
                    "diskSizeGB": "[variables('global_fw_diskSizeGB')]"
                  }
                },
                "osProfile": {
                  "computerName": "[variables('fw1_computerName')]",
                  "adminUsername": "[variables('global_fw_adminUsername')]",
                  "adminPassword": "[variables('global_fw_adminPassword')]",
                  "customData": "[base64(variables('global_fw_bootstrap'))]"
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fw1_interface0_name'))]",
                      "properties": {
                        "primary": true
                      }
                    },
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fw1_interface1_name'))]",
                      "properties": {
                        "primary": false
                      }
                    },
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fw1_interface2_name'))]",
                      "properties": {
                        "primary": false
                      }
                    }
                  ]
                }
              },
              "zones": [
                "[variables('fw1_zone')]"
              ],
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fw1_interface0_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fw1_interface1_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fw1_interface2_name'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "comments": "CREATE FW2 WITH INTERFACES",
      "type": "Microsoft.Resources/deployments",
      "name": "CREATE_FW2",
      "apiVersion": "2020-01-01",
      "resourceGroup": "[resourceGroup().name]",
      "dependsOn": [
        "CREATE_VNET",
        "CREATE_NSGS",
        "CREATE_INTERNALLB",
        "CREATE_PUBLICLB"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "condition": "[equals(variables('global_fw_interface0_pip_option'), 'Yes')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "sku": {
                "name": "[variables('global_var_sku')]",
                "tier": "[variables('global_var_tier')]"
              },
              "name": "[variables('fw2_interface0_pip_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "publicIPAddressVersion": "[variables('global_var_networkVersion')]",
                "publicIPAllocationMethod": "[variables('global_var_allocationMethod')]",
                "idleTimeoutInMinutes": "[variables('global_var_idleTimeoutInMinutes')]"
              }
            },
            {
              "condition": "[equals(variables('global_fw_interface1_pip_option'), 'Yes')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "sku": {
                "name": "[variables('global_var_sku')]",
                "tier": "[variables('global_var_tier')]"
              },
              "name": "[variables('fw2_interface1_pip_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "publicIPAddressVersion": "[variables('global_var_networkVersion')]",
                "publicIPAllocationMethod": "[variables('global_var_allocationMethod')]",
                "idleTimeoutInMinutes": "[variables('global_var_idleTimeoutInMinutes')]"
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('fw2_interface0_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIpAddress": "[if(equals(variables('global_fw_interface0_pip_option'),'Yes'), variables('fw2_interface0_pip_id'), json('null'))]",
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet0_name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "[variables('global_var_networkVersion')]"
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[variables('global_fw_enableAcceleratedNetworking')]",
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('global_fw_mgmtnsg_name'))]"
                },
                "tapConfigurations": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('fw2_interface0_pip_name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('fw2_interface1_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIpAddress": "[if(equals(variables('global_fw_interface1_pip_option'),'Yes'), variables('fw2_interface1_pip_id'), json('null'))]",
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet1_name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "[variables('global_var_networkVersion')]",
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[concat(resourceId(variables('publicLb_resource_group'), 'Microsoft.Network/loadBalancers', variables('publicLb_name')), '/backendAddressPools/', variables('publicLb_pool_name'))]"
                        }
                      ]
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[variables('global_fw_enableAcceleratedNetworking')]",
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('global_fw_dataNsg_name'))]"
                },
                "tapConfigurations": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('fw2_interface1_pip_name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('fw2_interface2_name')]",
              "apiVersion": "2020-03-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet2_name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "[variables('global_var_networkVersion')]",
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[concat(resourceId(variables('internalLb_resource_group'), 'Microsoft.Network/loadBalancers', variables('internalLb_name')), '/backendAddressPools/', variables('internalLb_pool_name'))]"
                        }
                      ]
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[variables('global_fw_enableAcceleratedNetworking')]",
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('global_fw_dataNsg_name'))]"
                },
                "tapConfigurations": []
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "name": "[variables('fw2_computerName')]",
              "apiVersion": "2019-12-01",
              "location": "[resourceGroup().location]",
              "plan": {
                "name": "[variables('global_fw_license')]",
                "product": "[variables('global_fw_product')]",
                "publisher": "[variables('global_fw_publisher')]"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[variables('global_fw_vmSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "[variables('global_fw_publisher')]",
                    "offer": "[variables('global_fw_product')]",
                    "sku": "[variables('global_fw_license')]",
                    "version": "[variables('global_fw_version')]"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "[variables('global_fw_storageAccountType')]"
                    },
                    "diskSizeGB": "[variables('global_fw_diskSizeGB')]"
                  }
                },
                "osProfile": {
                  "computerName": "[variables('fw2_computerName')]",
                  "adminUsername": "[variables('global_fw_adminUsername')]",
                  "adminPassword": "[variables('global_fw_adminPassword')]",
                  "customData": "[base64(variables('global_fw_bootstrap'))]"
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fw2_interface0_name'))]",
                      "properties": {
                        "primary": true
                      }
                    },
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fw2_interface1_name'))]",
                      "properties": {
                        "primary": false
                      }
                    },
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fw2_interface2_name'))]",
                      "properties": {
                        "primary": false
                      }
                    }
                  ]
                }
              },
              "zones": [
                "[variables('fw2_zone')]"
              ],
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fw2_interface0_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fw2_interface1_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fw2_interface2_name'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2020-01-01",
      "name": "fetchIpAddress",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "CREATE_VNG"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[uri(variables('_artifactsLocation'), concat('fetchIpAddress.json', variables('_artifactsLocationSasToken')))]"
        },
        "parameters": {
          "publicIPAddressId": {
            "value": "[resourceId('Microsoft.Network/publicIpAddresses', variables('vng_pip1_name'))]"
          }
        }
      }
    },
    {
      "apiVersion": "2020-01-01",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('wan_rg')]",
      "name": "UPDATE_HUB_CONNECTION",
      "dependsOn": [
        "fetchIpAddress"
      ],
      "properties": {
        "mode": "Incremental",
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Network/vpnSites",
              "name": "[variables('wan_hub_vpn_site_name')]",
              "apiVersion": "2020-03-01",
              "location": "[variables('wan_location')]",
              "dependsOn": [],
              "properties": {
                "addressSpace": {
                  "addressPrefixes": "[variables('wan_hub_vpn_address_space_list')]"
                },
                "bgpProperties": {
                  "asn": "[variables('vng_asn')]",
                  "bgpPeeringAddress": "[variables('vng_bgp_ip1')]"
                },
                "deviceProperties": {
                  "deviceVendor": "[variables('wan_hub_vpn_connection_vendor')]",
                  "linkSpeedInMbps": "[variables('wan_hub_vpn_connection_speed')]"
                },
                "ipAddress": "[reference('fetchIpAddress').outputs.ipAddress.value]",
                "virtualWan": {
                  "id": "[variables('wan_id')]"
                }
              }
            },
            {
              "type": "Microsoft.Network/vpnGateways",
              "name": "[variables('wan_hub_vpn_gateway_name')]",
              "apiVersion": "2020-03-01",
              "location": "[variables('wan_location')]",
              "dependsOn": [
                "[variables('wan_hub_vpn_site_id')]"
              ],
              "properties": {
                "connections": [
                  {
                    "name": "[variables('wan_hub_vpn_connection_name')]",
                    "properties": {
                      "connectionBandwidth": "[variables('wan_hub_vpn_bandwidth')]",
                      "enableBgp": "[variables('wan_hub_vpn_bgp_enable')]",
                      "sharedKey": "[variables('vng_shared_key')]",
                      "remoteVpnSite": {
                        "id": "[variables('wan_hub_vpn_site_id')]"
                      }
                    }
                  }
                ],
                "virtualHub": {
                  "id": "[variables('wan_hub_id')]"
                },
                "bgpSettings": {
                  "asn": 65515
                }
              }
            }
          ],
          "outputs": {}
        }
      }
    }
  ]
}
